from telegram.ext import Updater, MessageHandler
from telegram.ext import Filters
from telegram import Sticker
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup
from telegram.ext import CommandHandler
import sqlmodule
import myparser
from telegram import User
from telegram import Message

REQUEST_KWARGS = {
    'proxy_url': 'socks5://5.133.217.88:4249',
}
updater = Updater(token='1189380390:AAGtbHYKIv_HDlGy4qyaOQ3ukB2GNyY_osE', use_context=True,
                  request_kwargs=REQUEST_KWARGS)
dispatcher = updater.dispatcher
import logging

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

con = sqlmodule.con
sqlmodule.create_table(con)

def start(update, context):
    user = update.message.from_user
    message='–ü—Ä–∏–≤–µ—Ç, '+ user.first_name
    update.message.reply_text(message, reply_markup=my_keyboard)

def help(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="üìç–ß—Ç–æ–±—ã –≤–Ω–µ—Å—Ç–∏ —Ñ–∏–ª—å–º –∏–ª–∏ –∫–Ω–∏–≥—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞: —Ñ–∏–ª—å–º/–∫–Ω–∏–≥–∞ –ù–∞–∑–≤–∞–Ω–∏–µ \n –ù–∞–ø—Ä–∏–º–µ—Ä, —Ñ–∏–ª—å–º –í–ª–∞—Å—Ç–µ–ª–∏–Ω –ö–æ–ª–µ—Ü. –ö–∞—Ç–µ–≥–æ—Ä–∏—é –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏ —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã!  \n üìç–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å: –ø—Ä–æ—á–∏—Ç–∞–Ω–æ/–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ–ª(–∞)/–ø—Ä–æ—á–∏—Ç–∞–ª(–∞) –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª \n–ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–º–æ—Ç—Ä–µ–ª –í–ª–∞—Å—Ç–µ–ª–∏–Ω –ö–æ–ª–µ—Ü  \nüìç–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –±–æ—Ç–∞ –º–æ–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –±—ã–ª–æ –≤–Ω–µ—Å–µ–Ω–æ, –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏–ª–∏ –≤—Å–µ –≤–º–µ—Å—Ç–µ  \nüìç–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:  \n/help \n/viewall \n")

def viewall(update, context):
    current_id = update.message.from_user.id
    dbtext = sqlmodule.get_all_data(con, current_id=current_id)
    contentlist = sqlmodule.representate_data(dbtext)
    text = ''.join(contentlist)
    context.bot.send_message(chat_id=update.effective_chat.id, text=text)

def view_items(update, context, category):
    current_id = update.message.from_user.id
    dbtext = sqlmodule.get_items(con, current_id=current_id, category=category)
    contentlist = sqlmodule.representate_data(dbtext)
    text = ''.join(contentlist)
    context.bot.send_message(chat_id=update.effective_chat.id, text=text)

def random_item(update, context, category):
    current_id = update.message.from_user.id
    text = sqlmodule.get_random_item(con, current_id=current_id, category=category) 
    text = text + '\n–ù–µ –∑–∞–±—É–¥—å —Å–æ–æ–±—â–∏—Ç—å –º–Ω–µ, –∫–æ–≥–¥–∞ –æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å —ç—Ç–∏–º, –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ —Ä–µ—à–∏—à—å —É–¥–∞–ª–∏—Ç—å'
    context.bot.send_message(chat_id=update.effective_chat.id, text=text)

def who_are_you(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="–Ø - –±–æ—Ç")
    context.bot.send_sticker(chat_id=update.effective_chat.id, sticker='CAACAgIAAxkBAAJEll6S61cD-mDbCFfBLgXREpJ1k9JNAAIqBAAC6VUFGJ9J7Vm07rMyGAQ')
    
def text_message_processing(update, context):
    text = update.message.text
    if text == '–ö—Ç–æ —Ç—ã?':
        return who_are_you(update=update, context=context)
    elif text.startswith('–ü—Ä–∏–≤–µ—Ç') or text.startswith('–ø—Ä–∏–≤–µ—Ç'):
        return start(update=update, context=context)
    elif myparser.parse_category(text):
        category = myparser.parse_category(text)
        return view_items(update, context, category=category) 
    elif text == '–í—Å—ë –≤–º–µ—Å—Ç–µ':
        return viewall(update=update, context=context)
    elif text == '–ü–æ–º–æ—â—å':
        return help(update=update, context=context)
    elif myparser.parse_query_to_random_item(text):
        category = myparser.parse_query_to_random_item(text)
        return random_item(update, context, category=category)
    elif myparser.parse_insertion(text):
        category, name = myparser.parse_insertion(text)
        current_id = update.message.from_user.id
        dbdata = (name, current_id, category)
        if  sqlmodule.is_already_exists(con, dbdata):
            update.message.reply_text(
                text="–ö–∞–∂–µ—Ç—Å—è, —ç—Ç–æ —É–∂–µ –±—ã–ª–æ –≤–Ω–µ—Å–µ–Ω–æ...",
                reply_markup=my_keyboard,
            )
        else:  
            dbdata = (current_id, category, name)
            sqlmodule.insert_in_db(con,dbdata=dbdata)
            update.message.reply_text(
            text=update.message.text + " - " + "–≤–Ω–µ—Å–µ–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!",
            reply_markup=my_keyboard,
            )
    elif myparser.parse_deletion(text):
        current_id = update.message.from_user.id
        category, name = myparser.parse_deletion(text)
        dbdata = (current_id, category, name)
        sqlmodule.delete_by_name_and_category(con, dbdata=dbdata)
        update.message.reply_text(
            text=category +' '+ name + " - " + "—É–¥–∞–ª–µ–Ω–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!",
            reply_markup=my_keyboard,
        )
    else:
        update.message.reply_text(
            text="–ù–µ –ø–æ–Ω–∏–º–∞—é...",
            reply_markup=my_keyboard,
        )

def image_processing(update, context):
    context.bot.send_sticker(chat_id=update.effective_chat.id, sticker='CAACAgIAAxkBAAJEf16S3Dp5mjWXu0NdIbqRft87tfQHAAI7BAAC6VUFGON-fsJ0gbtJGAQ')
    context.bot.send_message(chat_id=update.effective_chat.id, text = '–Ø –Ω–µ —É–º–µ—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏...')
 
button_start=KeyboardButton('/start')
button_help=KeyboardButton('–ü–æ–º–æ—â—å')
button_viewall=KeyboardButton('–í—Å—ë –≤–º–µ—Å—Ç–µ')
button_viewbooks=KeyboardButton('–ö–Ω–∏–≥–∏')
button_viewfilms=KeyboardButton('–§–∏–ª—å–º—ã')
button_randomfilm=KeyboardButton('–ß—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?')
button_randombook=KeyboardButton('–ß—Ç–æ –ø–æ—á–∏—Ç–∞—Ç—å?')
my_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            
            button_viewbooks,
            button_viewfilms,
            button_viewall,
        ],  
        [
            button_randomfilm,
            button_randombook,
        ],  
        [
            button_help,
        ], 
    ],
    resize_keyboard=True,
)

start_handler = CommandHandler('start', start)
help_handler = CommandHandler('help', help)
viewall_handler = CommandHandler('viewall', viewall)
dispatcher.add_handler(start_handler)
dispatcher.add_handler(help_handler)
dispatcher.add_handler(viewall_handler)
dispatcher.add_handler(MessageHandler(filters=Filters.text, callback=text_message_processing))
dispatcher.add_handler(MessageHandler(filters=Filters.photo, callback=image_processing))
updater.start_polling()
